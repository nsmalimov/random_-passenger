// Code generated by protoc-gen-go. DO NOT EDIT.
// source: passenger_driver.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestDriver struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDriver) Reset()         { *m = RequestDriver{} }
func (m *RequestDriver) String() string { return proto.CompactTextString(m) }
func (*RequestDriver) ProtoMessage()    {}
func (*RequestDriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_7196ee08884a7dc7, []int{0}
}

func (m *RequestDriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDriver.Unmarshal(m, b)
}
func (m *RequestDriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDriver.Marshal(b, m, deterministic)
}
func (m *RequestDriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDriver.Merge(m, src)
}
func (m *RequestDriver) XXX_Size() int {
	return xxx_messageInfo_RequestDriver.Size(m)
}
func (m *RequestDriver) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDriver.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDriver proto.InternalMessageInfo

type RequestOrder struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestOrder) Reset()         { *m = RequestOrder{} }
func (m *RequestOrder) String() string { return proto.CompactTextString(m) }
func (*RequestOrder) ProtoMessage()    {}
func (*RequestOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_7196ee08884a7dc7, []int{1}
}

func (m *RequestOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOrder.Unmarshal(m, b)
}
func (m *RequestOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOrder.Marshal(b, m, deterministic)
}
func (m *RequestOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOrder.Merge(m, src)
}
func (m *RequestOrder) XXX_Size() int {
	return xxx_messageInfo_RequestOrder.Size(m)
}
func (m *RequestOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOrder.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOrder proto.InternalMessageInfo

type ResponseDriver struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CarModel             string   `protobuf:"bytes,2,opt,name=carModel,proto3" json:"carModel,omitempty"`
	Latitude             float64  `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseDriver) Reset()         { *m = ResponseDriver{} }
func (m *ResponseDriver) String() string { return proto.CompactTextString(m) }
func (*ResponseDriver) ProtoMessage()    {}
func (*ResponseDriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_7196ee08884a7dc7, []int{2}
}

func (m *ResponseDriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDriver.Unmarshal(m, b)
}
func (m *ResponseDriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDriver.Marshal(b, m, deterministic)
}
func (m *ResponseDriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDriver.Merge(m, src)
}
func (m *ResponseDriver) XXX_Size() int {
	return xxx_messageInfo_ResponseDriver.Size(m)
}
func (m *ResponseDriver) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDriver.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDriver proto.InternalMessageInfo

func (m *ResponseDriver) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResponseDriver) GetCarModel() string {
	if m != nil {
		return m.CarModel
	}
	return ""
}

func (m *ResponseDriver) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *ResponseDriver) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type ResponseOrder struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Latitude             float64  `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOrder) Reset()         { *m = ResponseOrder{} }
func (m *ResponseOrder) String() string { return proto.CompactTextString(m) }
func (*ResponseOrder) ProtoMessage()    {}
func (*ResponseOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_7196ee08884a7dc7, []int{3}
}

func (m *ResponseOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOrder.Unmarshal(m, b)
}
func (m *ResponseOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOrder.Marshal(b, m, deterministic)
}
func (m *ResponseOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOrder.Merge(m, src)
}
func (m *ResponseOrder) XXX_Size() int {
	return xxx_messageInfo_ResponseOrder.Size(m)
}
func (m *ResponseOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOrder proto.InternalMessageInfo

func (m *ResponseOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResponseOrder) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ResponseOrder) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *ResponseOrder) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestDriver)(nil), "protobuf.RequestDriver")
	proto.RegisterType((*RequestOrder)(nil), "protobuf.RequestOrder")
	proto.RegisterType((*ResponseDriver)(nil), "protobuf.ResponseDriver")
	proto.RegisterType((*ResponseOrder)(nil), "protobuf.ResponseOrder")
}

func init() { proto.RegisterFile("passenger_driver.proto", fileDescriptor_7196ee08884a7dc7) }

var fileDescriptor_7196ee08884a7dc7 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x50, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x35, 0x6b, 0x2d, 0xed, 0xa0, 0x2b, 0xe4, 0xd0, 0x2e, 0x8b, 0x87, 0x92, 0xd3, 0x9e, 0x16,
	0xd1, 0xbb, 0x20, 0x78, 0x2d, 0xc2, 0xfe, 0x80, 0xa4, 0x66, 0xac, 0x0b, 0x6b, 0xb2, 0x4e, 0x92,
	0xfe, 0x83, 0x7f, 0x2d, 0x9d, 0x74, 0x6b, 0x65, 0x3d, 0x79, 0x0a, 0xef, 0xbd, 0xc9, 0xbc, 0x37,
	0x0f, 0x16, 0xbd, 0xf6, 0x1e, 0xed, 0x16, 0xe9, 0xc5, 0x50, 0xbb, 0x43, 0xaa, 0x7b, 0x72, 0xc1,
	0xc9, 0x19, 0x3f, 0x9b, 0xf8, 0xa6, 0xae, 0xe1, 0xaa, 0xc1, 0xcf, 0x88, 0x3e, 0x3c, 0xf1, 0x80,
	0xca, 0xe1, 0xf2, 0x40, 0x3c, 0x93, 0x41, 0x52, 0x3b, 0xc8, 0x1b, 0xf4, 0xbd, 0xb3, 0x1e, 0xd3,
	0x84, 0xcc, 0x21, 0x6b, 0x4d, 0x21, 0x56, 0xa2, 0x9a, 0x37, 0x59, 0x6b, 0x64, 0x09, 0xb3, 0x57,
	0x4d, 0x6b, 0x67, 0xb0, 0x2b, 0x32, 0x66, 0x8f, 0x78, 0xaf, 0x75, 0x3a, 0xb4, 0x21, 0x1a, 0x2c,
	0xce, 0x57, 0xa2, 0x12, 0xcd, 0x11, 0xcb, 0x1b, 0x98, 0x77, 0xce, 0x6e, 0x93, 0x38, 0x61, 0xf1,
	0x87, 0x50, 0x71, 0x1f, 0x2c, 0xf9, 0x72, 0x90, 0xbf, 0x6c, 0xa3, 0x47, 0xb2, 0xfa, 0x03, 0x07,
	0xdb, 0x01, 0xff, 0xdf, 0xf6, 0xee, 0x4b, 0xc0, 0x64, 0xad, 0xc3, 0xbb, 0x7c, 0x84, 0xe9, 0xe1,
	0xde, 0x65, 0x3d, 0xb4, 0x55, 0xff, 0xaa, 0xaa, 0x2c, 0x4e, 0x85, 0xd3, 0x8a, 0xd4, 0x59, 0x25,
	0x6e, 0x85, 0x7c, 0x80, 0x8b, 0x14, 0x7d, 0x31, 0xda, 0xc0, 0x7c, 0xb9, 0x1c, 0x2f, 0x48, 0xa5,
	0xf3, 0xff, 0xcd, 0x94, 0xd5, 0xfb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0xad, 0x06, 0x9b,
	0xc6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	Driver(ctx context.Context, opts ...grpc.CallOption) (Math_DriverClient, error)
	Order(ctx context.Context, opts ...grpc.CallOption) (Math_OrderClient, error)
}

type mathClient struct {
	cc *grpc.ClientConn
}

func NewMathClient(cc *grpc.ClientConn) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Driver(ctx context.Context, opts ...grpc.CallOption) (Math_DriverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[0], "/protobuf.Math/Driver", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathDriverClient{stream}
	return x, nil
}

type Math_DriverClient interface {
	Send(*RequestDriver) error
	Recv() (*ResponseDriver, error)
	grpc.ClientStream
}

type mathDriverClient struct {
	grpc.ClientStream
}

func (x *mathDriverClient) Send(m *RequestDriver) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathDriverClient) Recv() (*ResponseDriver, error) {
	m := new(ResponseDriver)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mathClient) Order(ctx context.Context, opts ...grpc.CallOption) (Math_OrderClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[1], "/protobuf.Math/Order", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathOrderClient{stream}
	return x, nil
}

type Math_OrderClient interface {
	Send(*RequestOrder) error
	Recv() (*ResponseOrder, error)
	grpc.ClientStream
}

type mathOrderClient struct {
	grpc.ClientStream
}

func (x *mathOrderClient) Send(m *RequestOrder) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathOrderClient) Recv() (*ResponseOrder, error) {
	m := new(ResponseOrder)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	Driver(Math_DriverServer) error
	Order(Math_OrderServer) error
}

// UnimplementedMathServer can be embedded to have forward compatible implementations.
type UnimplementedMathServer struct {
}

func (*UnimplementedMathServer) Driver(srv Math_DriverServer) error {
	return status.Errorf(codes.Unimplemented, "method Driver not implemented")
}
func (*UnimplementedMathServer) Order(srv Math_OrderServer) error {
	return status.Errorf(codes.Unimplemented, "method Order not implemented")
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Driver_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Driver(&mathDriverServer{stream})
}

type Math_DriverServer interface {
	Send(*ResponseDriver) error
	Recv() (*RequestDriver, error)
	grpc.ServerStream
}

type mathDriverServer struct {
	grpc.ServerStream
}

func (x *mathDriverServer) Send(m *ResponseDriver) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathDriverServer) Recv() (*RequestDriver, error) {
	m := new(RequestDriver)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Math_Order_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Order(&mathOrderServer{stream})
}

type Math_OrderServer interface {
	Send(*ResponseOrder) error
	Recv() (*RequestOrder, error)
	grpc.ServerStream
}

type mathOrderServer struct {
	grpc.ServerStream
}

func (x *mathOrderServer) Send(m *ResponseOrder) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathOrderServer) Recv() (*RequestOrder, error) {
	m := new(RequestOrder)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Math",
	HandlerType: (*MathServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Driver",
			Handler:       _Math_Driver_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Order",
			Handler:       _Math_Order_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "passenger_driver.proto",
}
